mixin createElement(elementText, elementName, ...modifiers) 
    -var classes = elementName
    each mod in modifiers
        - if (mod[0] == '!')
            - elementName = mod.substring(1) 
            - classes += (" " + elementName)
        - else 
            - classes += (" " + elementName + "-" + mod)
    div(class= classes) #{elementText}

mixin createCircleProgress(percent)
    - var str = "transform: rotate(" + percent*1.8 + "deg)"
    .radialProgress(data-percent= percent)
        .radialProgress__mask.radialProgress__mask-full(style= str)
            .radialProgress__fill(style= str)
        .radialProgress__mask
            .radialProgress__fill(style= str)
        .radialProgress__inset

mixin createPieChart(partsNumber, ...details)
    - var progress = 0
    .pieChart
        - for(var i = 0; i < partsNumber; i++)
            - var iterations = 1
            - var current = details[i]*3.6    
            - if (current > 180)
                - iterations = 2
                - current/=2

            - var beforeStyle = "transform: rotate(" + (current +1) + "deg)"
            - var classes = "pieChart__part-before " + details[i+partsNumber]

            - for(var j = 0; j < iterations; j++)
                - var style = "transform: rotate(" + progress +"deg)"
                div.pieChart__part(style= style)
                    div(class= classes, style= beforeStyle)
                - progress += current


mixin createWarningSlider(percent)
    - var style = "left: " + percent + "%";
    .sliders__slider
        .sliders__drag.sliders__drag-warning(style= style)
            .sliders__warningValue(data-percent= percent)

mixin createSuccessSlider(percent)
    - var style = "left: " + percent + "%";
    - var styleWidth = "width: " + percent + "%"
    .sliders__slider.sliders__slider-success
        .sliders__drag.sliders__drag-success(style= style)
        .sliders__fillSuccess(style= styleWidth)
        .sliders__axis
            .sliders__axisValue 0
            .sliders__axisValue 25
            .sliders__axisValue 50
            .sliders__axisValue 75
            .sliders__axisValue 100



mixin createStageChart(progress, idStart = 1, elemClass = "warning", maximum = 5)
    - var possibleClass = "couldBe_" + elemClass;
    - var notAchieved = "notAchieved";
    - var currentId
    - var groupName = "group_" + idStart;
    - for(var j = 0; j < maximum; j++)
        - var classes = "stageChart__clickBox " + "stageChart__clickBox-" + (j+1) +"of" + maximum
        - currentId = "SC_" + startId + "_" + j
        - if(progress == (j+1))
            input(class= classes, id= currentId, type= "radio", name= groupName, checked)
        - else
            input(class= classes, id= currentId, type= "radio", name= groupName)

    .stageChart
        - for(var i = 0; i < maximum; i++)
            - currentId = "SC_" + startId + "_" + i
            if(i < progress)
                label(for= currentId)
                    +createElement(i+1,"stageChart__value",elemClass, possibleClass)
            else
                label(for= currentId)
                    +createElement(i+1,"stageChart__value",notAchieved, possibleClass)
                    
    .stageChart__scale
    .stageChart__progress.stageChart__progress-warning

mixin createRadioGroup(quantity, activeNumber, startId, spaced = true)
    - var groupName = "RG#" + startId
    - for(var i = 0; i < quantity; i++)
        - var currentId = "CRG_" + startId + "_" + i
        - if( (i+1) == activeNumber)
            input.switch__input(type= "radio", checked, id= currentId, name= groupName)
        - else
            input.switch__input(type= "radio", id= currentId, name= groupName)
        label.switch__label(for= currentId)
            - if(spaced && (i!=(quantity - 1)))
                .switch__toggle.switch__space
                    .switch__indicator
            - else 
                .switch__toggle
                    .switch__indicator

mixin createCheckGroup(quantity, startId, spaced, ...activeNumbers )
    - for(var i = 0; i < quantity; i++)
        - var currentId = "CG_" + startId + "_" + i
        - if( activeNumbers.includes(i+1) )
            input.switch__input(type= "checkbox", checked, id= currentId)
        - else
            input.switch__input(type= "checkbox", id= currentId)
        label.switch__label(for= currentId)
            - if(spaced && (i!=(quantity - 1)))
                .switch__tickBox.switch__space
            - else 
                .switch__tickBox

mixin createNews(imgSrc, header, date, details)
    .news 
        img.news__img(src= imgSrc)
        .news__content
            .news__header #{header}
            .news__date #{date}
            .news__details #{details}